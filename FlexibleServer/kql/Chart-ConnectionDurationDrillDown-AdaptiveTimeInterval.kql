//Connection durations drill-down
let dummystart=datetime('2000-01-01 00:00');
let dummyend=datetime('2000-01-01 00:01');
let Disconnections=AzureDiagnostics
| where ResourceProvider =="MICROSOFT.DBFORPOSTGRESQL"
| where Category == "PostgreSQLLogs"
| where Message contains "disconnection"
| extend DisconnectTime=todatetime(timestamp_s);
let starttime=toscalar(
    Disconnections
    | summarize mintime=min(DisconnectTime)
    | project xmintime=bin(mintime, 1m)
    | extend mintime=iff(isnotempty(xmintime), xmintime, dummystart)
    | project mintime
);
let endtime=toscalar(
    Disconnections
    | summarize xmaxtime=max(DisconnectTime)
    | extend maxtime=iff(isnotempty(xmaxtime), xmaxtime, dummyend)
    | project maxtime
);
let TimeRange = endtime - starttime;
let Intervals = iff(
    TimeRange <= 12h, 1m, 
        iff(TimeRange <= 24h, 5m, 
            iff(TimeRange <= 48h, 10m,
                iff(TimeRange <= 7d, 30m,1h)
            )
        )
);
let IntervalStr=iff (
    Intervals==1m,"1 minute",
        iff (Intervals==5m, "5 minutes",
            iff (Intervals==10m, "10 minutes",
                iff (Intervals==30m, "30 minutes", "1 hour")
            )
        )
);
Disconnections
| extend allmatches=extract_all(@'session time:(.+)user=(.+)database=(.+)host=(.\S+)', Message)
| extend duration=totime(allmatches[0][0])
| extend user=trim(@" ",tostring(allmatches[0][1]) )
| extend database=tostring(allmatches[0][2])
| extend ip=tostring(allmatches[0][3])
| where user != 'azuresu'
| extend ts = totimespan(duration)
| extend DurationInSeconds = ts / 1s
| extend ConnType=iff(
    DurationInSeconds <= 60, 'Short-Lived Connection' , 
    iff(DurationInSeconds > 60 and DurationInSeconds < 1200, 'Normal-Lived Connection','Long-Lived Connection')
)
| make-series Connections=count() default=0 on DisconnectTime from starttime to endtime step Intervals by ConnType
| render timechart with ( xtitle=strcat("Time (aggregation interval ",IntervalStr,")") )
